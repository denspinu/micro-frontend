import type { OnExitFn, OnAfterBuildFn, OnBeforeBuildFn, OnDevCompileDoneFn, ModifyBundlerChainFn, ModifyRspackConfigFn, ModifyWebpackChainFn, ModifyWebpackConfigFn, ModifyRsbuildConfigFn, OnAfterStartDevServerFn, OnBeforeStartDevServerFn, OnAfterStartProdServerFn, OnBeforeStartProdServerFn, OnAfterCreateCompilerFn, OnBeforeCreateCompilerFn } from '@rsbuild/shared';
export declare function initHooks(): {
    /** parameters are not bundler-related */
    onExit: import("@rsbuild/shared").AsyncHook<OnExitFn>;
    onDevCompileDone: import("@rsbuild/shared").AsyncHook<OnDevCompileDoneFn>;
    onAfterStartDevServer: import("@rsbuild/shared").AsyncHook<OnAfterStartDevServerFn>;
    onBeforeStartDevServer: import("@rsbuild/shared").AsyncHook<OnBeforeStartDevServerFn>;
    onAfterStartProdServer: import("@rsbuild/shared").AsyncHook<OnAfterStartProdServerFn>;
    onBeforeStartProdServer: import("@rsbuild/shared").AsyncHook<OnBeforeStartProdServerFn>;
    /** parameters are bundler-related */
    onAfterBuild: import("@rsbuild/shared").AsyncHook<OnAfterBuildFn>;
    onBeforeBuild: import("@rsbuild/shared").AsyncHook<OnBeforeBuildFn>;
    modifyRspackConfig: import("@rsbuild/shared").AsyncHook<ModifyRspackConfigFn>;
    modifyBundlerChain: import("@rsbuild/shared").AsyncHook<ModifyBundlerChainFn>;
    modifyWebpackChain: import("@rsbuild/shared").AsyncHook<ModifyWebpackChainFn>;
    modifyWebpackConfig: import("@rsbuild/shared").AsyncHook<ModifyWebpackConfigFn>;
    modifyRsbuildConfig: import("@rsbuild/shared").AsyncHook<ModifyRsbuildConfigFn>;
    onAfterCreateCompiler: import("@rsbuild/shared").AsyncHook<OnAfterCreateCompilerFn>;
    onBeforeCreateCompiler: import("@rsbuild/shared").AsyncHook<OnBeforeCreateCompilerFn>;
};
export type Hooks = ReturnType<typeof initHooks>;
